(()=>{var e={};e.id=2,e.ids=[2],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},6426:(e,t,r)=>{"use strict";r.d(t,{DM:()=>o});let n=Symbol.for("__cloudflare-context__");function o(e={async:!1}){return e.async?a():function(){let e=s();if(e)return e;if(function(){let e=globalThis;return e.__NEXT_DATA__?.nextExport===!0}())throw Error("\n\nERROR: `getCloudflareContext` has been called in sync mode in either a static route or at the top level of a non-static one, both cases are not allowed but can be solved by either:\n  - make sure that the call is not at the top level and that the route is not static\n  - call `getCloudflareContext({async: true})` to use the `async` mode\n  - avoid calling `getCloudflareContext` in the route\n");throw Error(l)}()}function s(){return globalThis[n]}async function a(){let e=s();if(e)return e;{let e=await i();return function(e){globalThis[n]=e}(e),e}}async function i(){let{getPlatformProxy:e}=await import(`${"__wrangler".replaceAll("_","")}`),{env:t,cf:r,ctx:n}=await e({environment:process.env.NEXT_DEV_WRANGLER_ENV});return{env:t,cf:r,ctx:n}}let l='\n\nERROR: `getCloudflareContext` has been called without having called `initOpenNextCloudflareForDev` from the Next.js config file.\nYou should update your Next.js config file as shown below:\n\n   ```\n   // next.config.mjs\n\n   import { initOpenNextCloudflareForDev } from "@opennextjs/cloudflare";\n\n   initOpenNextCloudflareForDev();\n\n'+"   const nextConfig = { ... };\n   export default nextConfig;\n   ```\n\n"},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},41600:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>x,routeModule:()=>c,serverHooks:()=>f,workAsyncStorage:()=>p,workUnitAsyncStorage:()=>d});var n={};r.r(n),r.d(n,{POST:()=>u});var o=r(96559),s=r(48088),a=r(37719),i=r(32190),l=r(6426);async function u(e){try{let t=e.clone(),r=await t.json();console.log("Request body:",r);let{env:n}=await (0,l.DM)({async:!0}),o=await n.WEBFLOW_AUTHENTICATION.get("accessToken");if(!o)return i.NextResponse.json({error:"Unauthorized"},{status:401});let{targetType:s,targetId:a,scriptId:u,location:c,version:p}=r;if(console.log(s,a,u,c,p,"body"),!s||!a||!u||!c||!p)return i.NextResponse.json({error:"Missing required fields"},{status:400});let d=`${s}-custom-code:${a}:${u}:${c}`,f={accessToken:o,version:p,timestamp:Date.now()},x=JSON.stringify(f);return await n.WEBFLOW_AUTHENTICATION.put(d,x,{expirationTtl:86400}),i.NextResponse.json({result:"Custom code upserted in KV",key:d},{status:200})}catch(e){return console.error("Error applying custom code:",e instanceof Error?e.message:e),i.NextResponse.json({error:"Failed to apply custom code"},{status:500})}}let c=new o.AppRouteRouteModule({definition:{kind:s.RouteKind.APP_ROUTE,page:"/api/custom-code/apply/route",pathname:"/api/custom-code/apply",filename:"route",bundlePath:"app/api/custom-code/apply/route"},resolvedPagePath:"C:\\Seattle\\Cookie App\\Consernbit-Cloudflare-Server-Test\\cb-server\\app\\api\\custom-code\\apply\\route.ts",nextConfigOutput:"standalone",userland:n}),{workAsyncStorage:p,workUnitAsyncStorage:d,serverHooks:f}=c;function x(){return(0,a.patchFetch)({workAsyncStorage:p,workUnitAsyncStorage:d})}},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},78335:()=>{},96487:()=>{}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[297,190],()=>r(41600));module.exports=n})();
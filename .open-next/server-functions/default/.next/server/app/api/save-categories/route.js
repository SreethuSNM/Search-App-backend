(()=>{var e={};e.id=290,e.ids=[290],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},6426:(e,t,r)=>{"use strict";r.d(t,{DM:()=>o});let n=Symbol.for("__cloudflare-context__");function o(e={async:!1}){return e.async?a():function(){let e=s();if(e)return e;if(function(){let e=globalThis;return e.__NEXT_DATA__?.nextExport===!0}())throw Error("\n\nERROR: `getCloudflareContext` has been called in sync mode in either a static route or at the top level of a non-static one, both cases are not allowed but can be solved by either:\n  - make sure that the call is not at the top level and that the route is not static\n  - call `getCloudflareContext({async: true})` to use the `async` mode\n  - avoid calling `getCloudflareContext` in the route\n");throw Error(l)}()}function s(){return globalThis[n]}async function a(){let e=s();if(e)return e;{let e=await i();return function(e){globalThis[n]=e}(e),e}}async function i(){let{getPlatformProxy:e}=await import(`${"__wrangler".replaceAll("_","")}`),{env:t,cf:r,ctx:n}=await e({environment:process.env.NEXT_DEV_WRANGLER_ENV});return{env:t,cf:r,ctx:n}}let l='\n\nERROR: `getCloudflareContext` has been called without having called `initOpenNextCloudflareForDev` from the Next.js config file.\nYou should update your Next.js config file as shown below:\n\n   ```\n   // next.config.mjs\n\n   import { initOpenNextCloudflareForDev } from "@opennextjs/cloudflare";\n\n   initOpenNextCloudflareForDev();\n\n'+"   const nextConfig = { ... };\n   export default nextConfig;\n   ```\n\n"},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},31393:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>g,routeModule:()=>d,serverHooks:()=>h,workAsyncStorage:()=>f,workUnitAsyncStorage:()=>x});var n={};r.r(n),r.d(n,{OPTIONS:()=>c,POST:()=>p});var o=r(96559),s=r(48088),a=r(37719),i=r(32190),l=r(6426);function u(e){return e.headers.set("Access-Control-Allow-Origin","*"),e.headers.set("Access-Control-Allow-Methods","POST, OPTIONS"),e.headers.set("Access-Control-Allow-Headers","Content-Type, Authorization"),e}async function c(){return u(new i.NextResponse(null,{status:204}))}async function p(e){try{let{env:t}=await (0,l.DM)({async:!0}),{siteId:r,scripts:n}=await e.json();if(!r||!n)return u(i.NextResponse.json({success:!1,error:"Missing required fields"},{status:400}));return await t.WEBFLOW_AUTHENTICATION.put(`script-categories:${r}`,JSON.stringify(n),{expirationTtl:2592e3}),u(i.NextResponse.json({success:!0}))}catch(e){return console.error("Error saving script categories:",e),u(i.NextResponse.json({success:!1,error:"Failed to save script categories"},{status:500}))}}let d=new o.AppRouteRouteModule({definition:{kind:s.RouteKind.APP_ROUTE,page:"/api/save-categories/route",pathname:"/api/save-categories",filename:"route",bundlePath:"app/api/save-categories/route"},resolvedPagePath:"C:\\Seattle\\Cookie App\\Consernbit-Cloudflare-Server-Test\\cb-server\\app\\api\\save-categories\\route.ts",nextConfigOutput:"standalone",userland:n}),{workAsyncStorage:f,workUnitAsyncStorage:x,serverHooks:h}=d;function g(){return(0,a.patchFetch)({workAsyncStorage:f,workUnitAsyncStorage:x})}},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},78335:()=>{},96487:()=>{}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[297,190],()=>r(31393));module.exports=n})();